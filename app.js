var argv = require('optimist')
    .usage('Sort the TLS ciphers by server.\nUsage: $0')
    .demand('h')
    .alias('h', 'host')
    .describe('h', 'The host to connect to')
    .alias('p', 'port')
    .describe('p', 'The port to connect to')
    .default('p', 443)
    .boolean('d')
    .alias('d', 'debug')
    .describe('d', 'print every packet to stdout')
    .argv;

var cipherSuite = [
    'TLS_NULL_WITH_NULL_NULL',
    'TLS_RSA_WITH_NULL_MD5',
    'TLS_RSA_WITH_NULL_SHA',
    'TLS_RSA_EXPORT_WITH_RC4_40_MD5',
    'TLS_RSA_WITH_RC4_128_MD5',
    'TLS_RSA_WITH_RC4_128_SHA',
    'TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5',
    'TLS_RSA_WITH_IDEA_CBC_SHA',
    'TLS_RSA_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_RSA_WITH_DES_CBC_SHA',
    'TLS_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_DH_DSS_WITH_DES_CBC_SHA',
    'TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA',
    'TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_DH_RSA_WITH_DES_CBC_SHA',
    'TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_DHE_DSS_WITH_DES_CBC_SHA',
    'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA',
    'TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_DHE_RSA_WITH_DES_CBC_SHA',
    'TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_DH_anon_EXPORT_WITH_RC4_40_MD5',
    'TLS_DH_anon_WITH_RC4_128_MD5',
    'TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA',
    'TLS_DH_anon_WITH_DES_CBC_SHA',
    'TLS_DH_anon_WITH_3DES_EDE_CBC_SHA',
    'TLS_KRB5_WITH_DES_CBC_SHA',
    'TLS_KRB5_WITH_3DES_EDE_CBC_SHA',
    'TLS_KRB5_WITH_RC4_128_SHA',
    'TLS_KRB5_WITH_IDEA_CBC_SHA',
    'TLS_KRB5_WITH_DES_CBC_MD5',
    'TLS_KRB5_WITH_3DES_EDE_CBC_MD5',
    'TLS_KRB5_WITH_RC4_128_MD5',
    'TLS_KRB5_WITH_IDEA_CBC_MD5',
    'TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA',
    'TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA',
    'TLS_KRB5_EXPORT_WITH_RC4_40_SHA',
    'TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5',
    'TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5',
    'TLS_KRB5_EXPORT_WITH_RC4_40_MD5',
    'TLS_PSK_WITH_NULL_SHA',
    'TLS_DHE_PSK_WITH_NULL_SHA',
    'TLS_RSA_PSK_WITH_NULL_SHA',
    'TLS_RSA_WITH_AES_128_CBC_SHA',
    'TLS_DH_DSS_WITH_AES_128_CBC_SHA',
    'TLS_DH_RSA_WITH_AES_128_CBC_SHA',
    'TLS_DHE_DSS_WITH_AES_128_CBC_SHA',
    'TLS_DHE_RSA_WITH_AES_128_CBC_SHA',
    'TLS_DH_anon_WITH_AES_128_CBC_SHA',
    'TLS_RSA_WITH_AES_256_CBC_SHA',
    'TLS_DH_DSS_WITH_AES_256_CBC_SHA',
    'TLS_DH_RSA_WITH_AES_256_CBC_SHA',
    'TLS_DHE_DSS_WITH_AES_256_CBC_SHA',
    'TLS_DHE_RSA_WITH_AES_256_CBC_SHA',
    'TLS_DH_anon_WITH_AES_256_CBC_SHA',
    'TLS_RSA_WITH_NULL_SHA256',
    'TLS_RSA_WITH_AES_128_CBC_SHA256',
    'TLS_RSA_WITH_AES_256_CBC_SHA256',
    'TLS_DH_DSS_WITH_AES_128_CBC_SHA256',
    'TLS_DH_RSA_WITH_AES_128_CBC_SHA256',
    'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256',
    'TLS_RSA_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA',
    'TLS_DHE_RSA_WITH_AES_128_CBC_SHA256',
    'TLS_DH_DSS_WITH_AES_256_CBC_SHA256',
    'TLS_DH_RSA_WITH_AES_256_CBC_SHA256',
    'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256',
    'TLS_DHE_RSA_WITH_AES_256_CBC_SHA256',
    'TLS_DH_anon_WITH_AES_128_CBC_SHA256',
    'TLS_DH_anon_WITH_AES_256_CBC_SHA256',
    'TLS_RSA_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA',
    'TLS_PSK_WITH_RC4_128_SHA',
    'TLS_PSK_WITH_3DES_EDE_CBC_SHA',
    'TLS_PSK_WITH_AES_128_CBC_SHA',
    'TLS_PSK_WITH_AES_256_CBC_SHA',
    'TLS_DHE_PSK_WITH_RC4_128_SHA',
    'TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA',
    'TLS_DHE_PSK_WITH_AES_128_CBC_SHA',
    'TLS_DHE_PSK_WITH_AES_256_CBC_SHA',
    'TLS_RSA_PSK_WITH_RC4_128_SHA',
    'TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA',
    'TLS_RSA_PSK_WITH_AES_128_CBC_SHA',
    'TLS_RSA_PSK_WITH_AES_256_CBC_SHA',
    'TLS_RSA_WITH_SEED_CBC_SHA',
    'TLS_DH_DSS_WITH_SEED_CBC_SHA',
    'TLS_DH_RSA_WITH_SEED_CBC_SHA',
    'TLS_DHE_DSS_WITH_SEED_CBC_SHA',
    'TLS_DHE_RSA_WITH_SEED_CBC_SHA',
    'TLS_DH_anon_WITH_SEED_CBC_SHA',
    'TLS_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_DH_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_DH_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_DHE_DSS_WITH_AES_128_GCM_SHA256',
    'TLS_DHE_DSS_WITH_AES_256_GCM_SHA384',
    'TLS_DH_DSS_WITH_AES_128_GCM_SHA256',
    'TLS_DH_DSS_WITH_AES_256_GCM_SHA384',
    'TLS_DH_anon_WITH_AES_128_GCM_SHA256',
    'TLS_DH_anon_WITH_AES_256_GCM_SHA384',
    'TLS_PSK_WITH_AES_128_GCM_SHA256',
    'TLS_PSK_WITH_AES_256_GCM_SHA384',
    'TLS_DHE_PSK_WITH_AES_128_GCM_SHA256',
    'TLS_DHE_PSK_WITH_AES_256_GCM_SHA384',
    'TLS_RSA_PSK_WITH_AES_128_GCM_SHA256',
    'TLS_RSA_PSK_WITH_AES_256_GCM_SHA384',
    'TLS_PSK_WITH_AES_128_CBC_SHA256',
    'TLS_PSK_WITH_AES_256_CBC_SHA384',
    'TLS_PSK_WITH_NULL_SHA256',
    'TLS_PSK_WITH_NULL_SHA384',
    'TLS_DHE_PSK_WITH_AES_128_CBC_SHA256',
    'TLS_DHE_PSK_WITH_AES_256_CBC_SHA384',
    'TLS_DHE_PSK_WITH_NULL_SHA256',
    'TLS_DHE_PSK_WITH_NULL_SHA384',
    'TLS_RSA_PSK_WITH_AES_128_CBC_SHA256',
    'TLS_RSA_PSK_WITH_AES_256_CBC_SHA384',
    'TLS_RSA_PSK_WITH_NULL_SHA256',
    'TLS_RSA_PSK_WITH_NULL_SHA384',
    'TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256',
    'TLS_EMPTY_RENEGOTIATION_INFO_SCSV',
    'TLS_ECDH_ECDSA_WITH_NULL_SHA',
    'TLS_ECDH_ECDSA_WITH_RC4_128_SHA',
    'TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA',
    'TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA',
    'TLS_ECDHE_ECDSA_WITH_NULL_SHA',
    'TLS_ECDHE_ECDSA_WITH_RC4_128_SHA',
    'TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA',
    'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA',
    'TLS_ECDH_RSA_WITH_NULL_SHA',
    'TLS_ECDH_RSA_WITH_RC4_128_SHA',
    'TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDH_RSA_WITH_AES_128_CBC_SHA',
    'TLS_ECDH_RSA_WITH_AES_256_CBC_SHA',
    'TLS_ECDHE_RSA_WITH_NULL_SHA',
    'TLS_ECDHE_RSA_WITH_RC4_128_SHA',
    'TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA',
    'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA',
    'TLS_ECDH_anon_WITH_NULL_SHA',
    'TLS_ECDH_anon_WITH_RC4_128_SHA',
    'TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDH_anon_WITH_AES_128_CBC_SHA',
    'TLS_ECDH_anon_WITH_AES_256_CBC_SHA',
    'TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA',
    'TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA',
    'TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA',
    'TLS_SRP_SHA_WITH_AES_128_CBC_SHA',
    'TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA',
    'TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA',
    'TLS_SRP_SHA_WITH_AES_256_CBC_SHA',
    'TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA',
    'TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA',
    'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',
    'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',
    'TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256',
    'TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384',
    'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',
    'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',
    'TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256',
    'TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384',
    'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256',
    'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',
    'TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256',
    'TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384',
    'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_ECDHE_PSK_WITH_RC4_128_SHA',
    'TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA',
    'TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA',
    'TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA',
    'TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256',
    'TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384',
    'TLS_ECDHE_PSK_WITH_NULL_SHA',
    'TLS_ECDHE_PSK_WITH_NULL_SHA256',
    'TLS_ECDHE_PSK_WITH_NULL_SHA384',
    'TLS_RSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_RSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256',
    'TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384',
    'TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256',
    'TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384',
    'TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_DH_anon_WITH_ARIA_128_CBC_SHA256',
    'TLS_DH_anon_WITH_ARIA_256_CBC_SHA384',
    'TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256',
    'TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384',
    'TLS_RSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_RSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256',
    'TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384',
    'TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256',
    'TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384',
    'TLS_DH_anon_WITH_ARIA_128_GCM_SHA256',
    'TLS_DH_anon_WITH_ARIA_256_GCM_SHA384',
    'TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256',
    'TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384',
    'TLS_PSK_WITH_ARIA_128_CBC_SHA256',
    'TLS_PSK_WITH_ARIA_256_CBC_SHA384',
    'TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256',
    'TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384',
    'TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256',
    'TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384',
    'TLS_PSK_WITH_ARIA_128_GCM_SHA256',
    'TLS_PSK_WITH_ARIA_256_GCM_SHA384',
    'TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256',
    'TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384',
    'TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256',
    'TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384',
    'TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256',
    'TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384',
    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256',
    'TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384',
    'TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256',
    'TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384',
    'TLS_RSA_WITH_AES_128_CCM',
    'TLS_RSA_WITH_AES_256_CCM',
    'TLS_DHE_RSA_WITH_AES_128_CCM',
    'TLS_DHE_RSA_WITH_AES_256_CCM',
    'TLS_RSA_WITH_AES_128_CCM_8',
    'TLS_RSA_WITH_AES_256_CCM_8',
    'TLS_DHE_RSA_WITH_AES_128_CCM_8',
    'TLS_DHE_RSA_WITH_AES_256_CCM_8',
    'TLS_PSK_WITH_AES_128_CCM',
    'TLS_PSK_WITH_AES_256_CCM',
    'TLS_DHE_PSK_WITH_AES_128_CCM',
    'TLS_DHE_PSK_WITH_AES_256_CCM',
    'TLS_PSK_WITH_AES_128_CCM_8',
    'TLS_PSK_WITH_AES_256_CCM_8',
    'TLS_PSK_DHE_WITH_AES_128_CCM_8',
    'TLS_PSK_DHE_WITH_AES_256_CCM_8',
    'TLS_ECDHE_ECDSA_WITH_AES_128_CCM',
    'TLS_ECDHE_ECDSA_WITH_AES_256_CCM',
    'TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8',
    'TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8',
    'TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256',
    'TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256',
    'TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256'
];

var net = require('net');
var stls = require('stls');

var debug = function() {
    if (argv.debug) {
        console.log.apply(console, arguments);
    }
};


var getTopCipher = function(callback) {
    
    var socket;
    var callbackCalled = false;
    var saveCallback = function(err, cipher) {
        if (callbackCalled) return;
        callbackCalled = true;
        socket.end();
        callback(err, cipher);
    };
    
    socket = net.connect({host: argv.host, port: argv.port}, function() {
        debug('connected to', argv.host, argv.port);
        
        var client_hello = stls.fix({
            ContentType: "handshake",
            ProtocolVersion: "1.1",
            handshake: {
              HandshakeType: "client_hello",
              ProtocolVersion: "1.1",
              Time: 1422729952,
              Random: new Buffer('9fe9c4556bb4a6246a8641ad23c8a4c69a7c41da9d78e462a2a35290', 'hex'),
              CipherSuites: cipherSuite,
              Extensions: []
            }
        });
        debug('====>====>====>');
        debug(client_hello);
        var buf = new Buffer(stls.size(client_hello));
        buf.cursor = 0;
        stls.write(buf, client_hello);
        socket.write(buf);
    });
    
    var readBuf = new Buffer(0);
    
    socket.on('data', function(chunk) {
        readBuf = Buffer.concat([readBuf, chunk]);
        readBuf.cursor = 0;
        try {
            var packet = stls.read(readBuf);
        } catch(e) {
            saveCallback(e);
        }
        while(packet) {
            readBuf = readBuf.slice(readBuf.cursor, readBuf.length);
            readBuf.cursor = 0;
            socket.emit('tls-packet', packet);
            try {
                packet = stls.read(readBuf);
            } catch(e) {
                saveCallback(e);
            }
        }
    });
    
    socket.on('tls-packet', function(packet) {
        debug('<====<====<====');
        debug(packet);
        if (packet.handshake.HandshakeType == 'server_hello') {
            saveCallback(null, packet.handshake.CipherSuite);
        }
    });
    
    socket.on('error', function(err) {
        saveCallback(err);
    });
    
    socket.on('close', function() {
        saveCallback(new Error('socket closed'));
    });
};

var pos = 1;
var handler = function(err, cipher) {
    if (err) {
        debug('server refused to offer more ciphers', err);
    } else {
        console.log(pos+': '+cipher);
        pos++;
        var index = cipherSuite.indexOf(cipher);
        if (index > 0) {
            cipherSuite.splice(index, 1);
            getTopCipher(handler);
        }
    }
};

getTopCipher(handler);